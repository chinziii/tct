import boto3
import csv

# Replace with your region and search keyword
region = 'us-west-2'
search_keyword = 'Aqua'

# Create EC2 client
ec2 = boto3.client('ec2', region_name=region)

# Create CSV file and write header row
with open('networking_details.csv', mode='w', newline='') as file:
    writer = csv.writer(file, delimiter='|')
    writer.writerow(['Instance ID', 'VPC ID', 'Security Group ID', 'Security Group Name', 'Inbound Traffic', 'Outbound Traffic'])

    # Get instances with search keyword in name or tags
    response = ec2.describe_instances(
        Filters=[
            {
                'Name': 'tag-value',
                'Values': ['*' + search_keyword + '*']
            },
            {
                'Name': 'instance-state-name',
                'Values': ['running']
            }
        ]
    )

    # Loop through instances and get networking details
    for reservation in response['Reservations']:
        for instance in reservation['Instances']:
            instance_id = instance['InstanceId']
            vpc_id = instance['VpcId']
            inbound_traffic = []
            outbound_traffic = []

            # Get security group details
            security_groups = instance.get('SecurityGroups', [])
            for sg in security_groups:
                sg_id = sg['GroupId']
                sg_name = sg['GroupName']

                # Get inbound rules
                ip_permissions = sg.get('IpPermissions', [])
                for rule in ip_permissions:
                    from_port = rule['FromPort']
                    to_port = rule['ToPort']
                    ip_ranges = rule['IpRanges']
                    for ip_range in ip_ranges:
                        cidr_ip = ip_range['CidrIp']
                        inbound_traffic.append(f"{cidr_ip}:{from_port}-{to_port}")

                # Get outbound rules
                ip_permissions_egress = sg.get('IpPermissionsEgress', [])
                for rule in ip_permissions_egress:
                    from_port = rule['FromPort']
                    to_port = rule['ToPort']
                    ip_ranges = rule['IpRanges']
                    for ip_range in ip_ranges:
                        cidr_ip = ip_range['CidrIp']
                        outbound_traffic.append(f"{cidr_ip}:{from_port}-{to_port}")

            # Write networking details to CSV file
            with open('networking_details.csv', mode='a', newline='') as file:
                writer = csv.writer(file, delimiter='|')
                writer.writerow([instance_id, vpc_id, sg_id, sg_name, ';'.join(inbound_traffic), ';'.join(outbound_traffic)])
